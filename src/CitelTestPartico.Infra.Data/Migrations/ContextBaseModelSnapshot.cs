// <auto-generated />
using System;
using CitelTestPartico.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CitelTestPartico.Infra.Data.Migrations
{
    [DbContext(typeof(ContextBase))]
    partial class ContextBaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CitelTestPratico.Dominio.CategoriaProdutoRoot.CategoriaProduto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .IsUnicode(true)
                        .HasColumnType("int(11)")
                        .HasColumnName("Id");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int(11)")
                        .HasColumnName("CategoriaId");

                    b.Property<DateTime>("DataHoraCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int(11)")
                        .HasColumnName("ProdutoId");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("CategoriasProdutos", (string)null);
                });

            modelBuilder.Entity("CitelTestPratico.Dominio.CategoriaRoot.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .IsUnicode(true)
                        .HasColumnType("int(11)")
                        .HasColumnName("Id");

                    b.Property<DateTime>("DataHoraCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Descricao");

                    b.HasKey("Id");

                    b.ToTable("Categorias", (string)null);
                });

            modelBuilder.Entity("CitelTestPratico.Dominio.ProdutoRoot.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .IsUnicode(true)
                        .HasColumnType("int(11)")
                        .HasColumnName("Id");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("Ativo");

                    b.Property<string>("CodigoBarra")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("char(100)")
                        .HasColumnName("CodigoBarra");

                    b.Property<DateTime>("DataHoraCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Descricao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("char(150)")
                        .HasColumnName("Nome");

                    b.Property<string>("UriImageDefault")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("UriImageDefault");

                    b.HasKey("Id");

                    b.ToTable("Produtos", (string)null);
                });

            modelBuilder.Entity("CitelTestPratico.Dominio.CategoriaProdutoRoot.CategoriaProduto", b =>
                {
                    b.HasOne("CitelTestPratico.Dominio.CategoriaRoot.Categoria", "Categoria")
                        .WithMany("CanaisVendas")
                        .HasForeignKey("CategoriaId")
                        .IsRequired();

                    b.HasOne("CitelTestPratico.Dominio.ProdutoRoot.Produto", "Produto")
                        .WithMany("Categorias")
                        .HasForeignKey("ProdutoId")
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("CitelTestPratico.Dominio.CategoriaRoot.Categoria", b =>
                {
                    b.Navigation("CanaisVendas");
                });

            modelBuilder.Entity("CitelTestPratico.Dominio.ProdutoRoot.Produto", b =>
                {
                    b.Navigation("Categorias");
                });
#pragma warning restore 612, 618
        }
    }
}
